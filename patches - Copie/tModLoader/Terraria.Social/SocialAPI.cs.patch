--- src/Terraria\Terraria.Social\SocialAPI.cs
+++ src/tModLoader\Terraria.Social\SocialAPI.cs
@@ -1,7 +_,9 @@
 using System;
 using System.Collections.Generic;
+using Terraria.ModLoader.Engine;
 using Terraria.Social.Base;
 using Terraria.Social.Steam;
+using Terraria.Utilities;
 
 namespace Terraria.Social
 {
@@ -27,20 +_,16 @@
 		{
 			if (!mode.HasValue)
 			{
-				mode = new SocialMode?(SocialMode.None);
-#if CLIENT
-				mode = new SocialMode?(SocialMode.Steam);
-#else
-				if (Program.LaunchParameters.ContainsKey("-steam"))
-				{
-					mode = new SocialMode?(SocialMode.Steam);
-				}
+				mode = (GoGVerifier.IsGoG) ? new SocialMode?(SocialMode.None) : new SocialMode?(SocialMode.Steam);
+
+#if CLIENT && DEBUG
+                if (!Program.LaunchParameters.ContainsKey("-nosteam"))
+					mode = new SocialMode?(SocialMode.None);
 #endif
 			}
 			SocialAPI._mode = mode.Value;
 			SocialAPI._modules = new List<ISocialModule>();
-			SocialMode mode2 = SocialAPI.Mode;
-			if (mode2 == SocialMode.Steam)
+			if (mode == SocialMode.Steam)
 			{
 				SocialAPI.LoadSteam();
 			}
@@ -59,13 +_,13 @@
 			}
 		}
 
-		private static T LoadModule<T>() where T : ISocialModule, new()
-		{
-#if MAC
-			T t = Activator.CreateInstance<T>();
-#else
-			T t = (default(T) == null) ? Activator.CreateInstance<T>() : default(T);
-#endif
+		private static T LoadModule<T>() where T : ISocialModule, new() {
+			T t;
+			if(PlatformUtilities.IsOSX)
+				t = Activator.CreateInstance<T>();
+			else
+				t = (default(T) == null) ? Activator.CreateInstance<T>() : default(T);
+
 			SocialAPI._modules.Add(t);
 			return t;
 		}

